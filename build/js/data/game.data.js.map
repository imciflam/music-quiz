{"version":3,"file":"game.data.js","sources":["js/data/game.data.js"],"sourcesContent":["// todo: customize later\nconst samples = [\n  {\n    artist: `Kevin MacLeod`,\n    name: `Long Stroll`,\n    image: `https://yt3.ggpht.com/-fkDeGauT7Co/AAAAAAAAAAI/AAAAAAAAAAA/dkF5ZKkrxRo/s900-c-k-no-mo-rj-c0xffffff/photo.jpg`,\n    src: `https://www.youtube.com/audiolibrary_download?vid=91624fdc22fc54ed`,\n    genre: `Jazz`\n  },\n  {\n    artist: `Jingle Punks`,\n    name: `In the Land of Rhinoplasty`,\n    image: `https://i.vimeocdn.com/portrait/992615_300x300`,\n    src: `https://www.youtube.com/audiolibrary_download?vid=dc3b4dc549becd6b`,\n    genre: `Rock`\n  },\n  {\n    artist: `Audionautix`,\n    name: `Travel Light`,\n    image: `http://4.bp.blogspot.com/-kft9qu5ET6U/VPFUBi9W-MI/AAAAAAAACYM/UxXilXKYwOc/s1600/audionautix%2BHalf%2BSize.jpg`,\n    src: `https://www.youtube.com/audiolibrary_download?vid=a127d9b7de8a17cf`,\n    genre: `Country`\n  },\n  {\n    artist: `Riot`,\n    name: `\tLevel Plane`,\n    image: `https://i.ytimg.com/vi/jzgM3m8Vp1k/maxresdefault.jpg`,\n    src: `https://www.youtube.com/audiolibrary_download?vid=dfb828f40096184c`,\n    genre: `R&B`\n  },\n  {\n    artist: `Jingle Punks`,\n    name: `Lucky Day`,\n    image: `https://i.vimeocdn.com/portrait/992615_300x300`,\n    src: `https://www.youtube.com/audiolibrary_download?vid=bcbe5be936a32fb1`,\n    genre: `Pop`\n  },\n  {\n    artist: `Gunnar Olsen`,\n    name: `Home Stretch`,\n    image: `https://f4.bcbits.com/img/0004181452_10.jpg`,\n    src: `https://www.youtube.com/audiolibrary_download?vid=bcbe5be936a32fb1`,\n    genre: `Electronic`\n  }\n]\n\nexport const levels = [\n  {\n    type: `Genre`,\n    title: `Choose Jazz tracks`,\n    questions: [samples[0], samples[1], samples[2], samples[3]],\n    answer: `1000`\n  },\n  {\n    type: `Genre`,\n    title: `Choose Rock tracks`,\n    questions: [samples[0], samples[1], samples[2], samples[3]],\n    answer: `0110`\n  },\n  {\n    type: `Genre`,\n    title: `Choose Country tracks`,\n    questions: [samples[0], samples[1], samples[2], samples[3]],\n    answer: `0010`\n  },\n  {\n    type: `Genre`,\n    title: `Choose R&B tracks`,\n    questions: [samples[0], samples[1], samples[2], samples[3]],\n    answer: `0001`\n  },\n  {\n    type: `Genre`,\n    title: `Choose Pop tracks`,\n    questions: [samples[4], samples[1], samples[2], samples[3]],\n    answer: `1000`\n  },\n  {\n    type: `Genre`,\n    title: `Choose Electronic tracks`,\n    questions: [samples[0], samples[5], samples[2], samples[3]],\n    answer: `0100`\n  },\n  {\n    type: `Artist`,\n    title: `Who performs this song?`,\n    questions: [samples[0], samples[1], samples[2]],\n    src: samples[0].src,\n    answer: 0\n  },\n  {\n    type: `Artist`,\n    title: `Who performs this song?`,\n    questions: [samples[1], samples[2], samples[3]],\n    src: samples[2].src,\n    answer: 1\n  },\n  {\n    type: `Artist`,\n    title: `Who performs this song?`,\n    questions: [samples[3], samples[2], samples[1]],\n    src: samples[1].src,\n    answer: 2\n  },\n  {\n    type: `Artist`,\n    title: `Who performs this song?`,\n    questions: [samples[0], samples[1], samples[2]],\n    src: samples[1].src,\n    answer: 1\n  }\n]\n\nexport const LEVELS_COUNT = 10\nexport const FAST_ANSWER_PERIOD = 30\nexport const MAX_ERRORS_COUNT = 4\nexport const TIME_FOR_GAME = 60 * 5 + 1\n\nconst label = {\n  GAME: `Guess a melody`,\n\n  TITLE_WIN: `You're a true music fan!`,\n  TITLE_WELCOME: `Game rules`,\n  TITLE_FAIL_TIME: `Alas..`,\n  TITLE_FAIL_TRY: `Such a pity!`,\n\n  BUTTON_WELCOME: `Start game`,\n  BUTTON_WIN: `Play again`,\n  BUTTON_FAIL: `Try again`\n}\n\nconst phrases = {\n  timeIsUp: () => `Time is up!<br>You didn't make it on time.`,\n  noMoreAttempts: () =>\n    `You have run out of attempts.<br>Better luck next time!`,\n  win: ({ place, playersCount, betterThan }) =>\n    `You've taken ${place} place out of ${playersCount} players. It's&nbsp;better than &nbsp;${betterThan}%&nbsp; other players' results`\n}\n\nexport const welcome = {\n  name: label.GAME,\n  title: label.TITLE_WELCOME,\n  rules: [\n    `Rules are simple&nbsp;â€” &nbsp;you have to answer all questions in 5 minites.`,\n    `You can make 3 mistakes.`,\n    `Good luck!`\n  ],\n  button: label.BUTTON_WELCOME\n}\n\nexport const resultTry = {\n  name: label.GAME,\n  title: label.TITLE_FAIL_TRY,\n  button: label.BUTTON_FAIL,\n  isWin: false\n}\n\nexport const resultTime = {\n  name: label.GAME,\n  title: label.TITLE_FAIL_TIME,\n  button: label.BUTTON_FAIL,\n  content: phrases.timeIsUp(),\n  isWin: false\n}\n\nexport const resultWin = {\n  name: label.GAME,\n  title: label.TITLE_WIN,\n  button: label.BUTTON_WIN,\n  isWin: true\n}\n\nexport const scoreBoard = []\n\nexport const initialGame = {\n  level: -1,\n  remainingAttempts: MAX_ERRORS_COUNT,\n  time: TIME_FOR_GAME,\n  answers: []\n}\n\n// copy game object and reassign it\nexport const tick = game => {\n  game = Object.assign({}, game)\n  game.time--\n  return game\n}\n\nexport const getLevel = (index, allLevels = levels) => allLevels[index]\n\nexport const nextLevel = (state, allLevels = levels) => {\n  const index = state.level + 1\n  if (!getLevel(index, allLevels)) {\n    throw new RangeError(`Can't find level ${index}`)\n  }\n  state.level = index\n  return state\n}\n\nexport const startGame = () => {\n  nextLevel()\n}\n\nexport const getAllLevelsTypes = (allLevels = levels) => {\n  return allLevels.map(level => level.type)\n}\n\n//copy game object and reassign it\nexport const setLives = (game, lives) => {\n  if (lives < 0) {\n    throw new RangeError(`Can't set negative lives`)\n  }\n  game = Object.assign({}, game)\n  game.lives = lives\n  return game\n}\n\nexport const getScore = answers => {\n  let score = -1\n  // if all questions were answered\n  if (answers.length === LEVELS_COUNT) {\n    score = answers.reduce((acc, it) => {\n      let point = -2\n      if (it.isCorrect) {\n        // if answer was fast\n        point = it.timeSpent < FAST_ANSWER_PERIOD ? 2 : 1\n      }\n      return acc + point\n    }, 0)\n  }\n  return score\n}\n\nconst getTimeSpent = answers => {\n  let time = answers.reduce((acc, it) => {\n    return acc + it.timeSpent\n  }, 0)\n  return time\n}\n\n// fetching scoreboard and creating array of objs from it, { position, score }\nconst getPosition = (statistics, score) => {\n  const statisticsIndexed = statistics.map(\n    (scoreFromStaticstics, position) => ({\n      position,\n      score: scoreFromStaticstics\n    })\n  )\n\n  // push a new obj\n  statisticsIndexed.push({\n    position: null,\n    score\n  })\n\n  // get new obj's position\n  const position = statisticsIndexed\n    .sort((a, b) => b.score - a.score)\n    .reduce((acc, it, index) => {\n      if (it.position === null) {\n        acc = index\n      }\n      return acc\n    }, -1)\n\n  if (position === -1) {\n    throw new Error(`Can't define position in Scoreboard`)\n  }\n  return position\n}\n\nexport const printResult = (statistics, game) => {\n  let endGameMessage = ``\n  const score = getScore(game.answers)\n  const time = getTimeSpent(game.answers)\n\n  //if time's not up && there's lives\n  if (game.remainingAttempts > 0 && time < TIME_FOR_GAME) {\n    const position = getPosition(statistics, score)\n    statistics.push(score)\n    statistics.sort((a, b) => b - a)\n\n    const stats = {\n      place: position + 1,\n      playersCount: statistics.length,\n      betterThan: Math.round(\n        ((statistics.length - position - 1) * 100) / statistics.length\n      )\n    }\n    endGameMessage = phrases.win(stats)\n  } else {\n    endGameMessage =\n      time > TIME_FOR_GAME ? phrases.timeIsUp() : phrases.noMoreAttempts()\n  }\n\n  return endGameMessage\n}\n\nexport class Timer {\n  constructor(time) {\n    this.time = time\n  }\n\n  get isFinished() {\n    return this.time < 1\n  }\n\n  get time() {\n    return this._time\n  }\n\n  set time(value) {\n    this._time = value\n  }\n\n  tick() {\n    this.time--\n  }\n}\n"],"names":[],"mappings":"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"}