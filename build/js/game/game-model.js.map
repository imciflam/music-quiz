{"version":3,"file":"game-model.js","sources":["js/data/game.data.js","js/game/game-model.js"],"sourcesContent":["const samples = [\n  {\n    artist: `Kevin MacLeod`,\n    name: `Long Stroll`,\n    image: `https://yt3.ggpht.com/-fkDeGauT7Co/AAAAAAAAAAI/AAAAAAAAAAA/dkF5ZKkrxRo/s900-c-k-no-mo-rj-c0xffffff/photo.jpg`,\n    src: `https://www.youtube.com/audiolibrary_download?vid=91624fdc22fc54ed`,\n    genre: `Jazz`\n  }, {\n    artist: `Jingle Punks`,\n    name: `In the Land of Rhinoplasty`,\n    image: `https://i.vimeocdn.com/portrait/992615_300x300`,\n    src: `https://www.youtube.com/audiolibrary_download?vid=dc3b4dc549becd6b`,\n    genre: `Rock`\n  }, {\n    artist: `Audionautix`,\n    name: `Travel Light`,\n    image: `http://4.bp.blogspot.com/-kft9qu5ET6U/VPFUBi9W-MI/AAAAAAAACYM/UxXilXKYwOc/s1600/audionautix%2BHalf%2BSize.jpg`,\n    src: `https://www.youtube.com/audiolibrary_download?vid=a127d9b7de8a17cf`,\n    genre: `Country`\n  }, {\n    artist: `Riot`,\n    name: `\tLevel Plane`,\n    image: `https://i.ytimg.com/vi/jzgM3m8Vp1k/maxresdefault.jpg`,\n    src: `https://www.youtube.com/audiolibrary_download?vid=dfb828f40096184c`,\n    genre: `R&B`\n  }, {\n    artist: `Jingle Punks`,\n    name: `Lucky Day`,\n    image: `https://i.vimeocdn.com/portrait/992615_300x300`,\n    src: `https://www.youtube.com/audiolibrary_download?vid=bcbe5be936a32fb1`,\n    genre: `Pop`\n  }, {\n    artist: `Gunnar Olsen`,\n    name: `Home Stretch`,\n    image: `https://f4.bcbits.com/img/0004181452_10.jpg`,\n    src: `https://www.youtube.com/audiolibrary_download?vid=bcbe5be936a32fb1`,\n    genre: `Electronic`\n  }\n];\n\nexport const levels = [\n  {\n    type: `Genre`,\n    title: `Выберите Jazz треки`,\n    questions: [\n      samples[0],\n      samples[1],\n      samples[2],\n      samples[3]\n    ],\n    answer: `1000`\n  }, {\n    type: `Genre`,\n    title: `Выберите Rock треки`,\n    questions: [\n      samples[0],\n      samples[1],\n      samples[2],\n      samples[3]\n    ],\n    answer: `0110`\n  }, {\n    type: `Genre`,\n    title: `Выберите Country треки`,\n    questions: [\n      samples[0],\n      samples[1],\n      samples[2],\n      samples[3]\n    ],\n    answer: `0010`\n  }, {\n    type: `Genre`,\n    title: `Выберите R&B треки`,\n    questions: [\n      samples[0],\n      samples[1],\n      samples[2],\n      samples[3]\n    ],\n    answer: `0001`\n  }, {\n    type: `Genre`,\n    title: `Выберите Pop треки`,\n    questions: [\n      samples[4],\n      samples[1],\n      samples[2],\n      samples[3]\n    ],\n    answer: `1000`\n  }, {\n    type: `Genre`,\n    title: `Выберите Electronic треки`,\n    questions: [\n      samples[0],\n      samples[5],\n      samples[2],\n      samples[3]\n    ],\n    answer: `0100`\n  }, {\n    type: `Artist`,\n    title: `Кто исполняет эту песню?`,\n    questions: [\n      samples[0],\n      samples[1],\n      samples[2]\n    ],\n    src: samples[0].src,\n    answer: 0\n  }, {\n    type: `Artist`,\n    title: `Кто исполняет эту песню?`,\n    questions: [\n      samples[1],\n      samples[2],\n      samples[3]\n    ],\n    src: samples[2].src,\n    answer: 1\n  }, {\n    type: `Artist`,\n    title: `Кто исполняет эту песню?`,\n    questions: [\n      samples[3],\n      samples[2],\n      samples[1]\n    ],\n    src: samples[1].src,\n    answer: 2\n  }, {\n    type: `Artist`,\n    title: `Кто исполняет эту песню?`,\n    questions: [\n      samples[0],\n      samples[1],\n      samples[2]\n    ],\n    src: samples[1].src,\n    answer: 1\n  }\n];\n\nexport const LEVELS_COUNT = 10;\nexport const FAST_ANSWER_PERIOD = 30;\nexport const MAX_ERRORS_COUNT = 4;\nexport const TIME_FOR_GAME = 60 * 5 + 1; // 5 minutes + 1 second\n\nconst label = {\n  GAME: `Угадай мелодию`,\n\n  TITLE_WIN: `Вы настоящий меломан!`,\n  TITLE_WELCOME: `Правила игры`,\n  TITLE_FAIL_TIME: `Увы и ах!`,\n  TITLE_FAIL_TRY: `Какая жалость!`,\n\n  BUTTON_WELCOME: `Начать игру`,\n  BUTTON_WIN: `Сыграть ещё раз`,\n  BUTTON_FAIL: `Попробовать ещё раз`\n};\n\nconst phrases = {\n  timeIsUp: () => `Время вышло!<br>Вы не успели отгадать все мелодии`,\n  noMoreAttempts: () =>\n    `У вас закончились все попытки.<br>Ничего, повезёт в следующий раз!`,\n  win: ({place, playersCount, betterThan}) =>\n    `Вы заняли ${place}-ое место из ${playersCount} игроков. Это&nbsp;лучше чем у&nbsp;${betterThan}%&nbsp;игроков`\n};\n\nexport const welcome = {\n  name: label.GAME,\n  title: label.TITLE_WELCOME,\n  rules: [\n    `Правила просты&nbsp;— за&nbsp;5 минут ответить на все вопросы.`,\n    `Ошибиться можно 3 раза.`,\n    `Удачи!`\n  ],\n  button: label.BUTTON_WELCOME\n};\n\nexport const resultTry = {\n  name: label.GAME,\n  title: label.TITLE_FAIL_TRY,\n  button: label.BUTTON_FAIL,\n  isWin: false\n};\n\nexport const resultTime = {\n  name: label.GAME,\n  title: label.TITLE_FAIL_TIME,\n  button: label.BUTTON_FAIL,\n  content: phrases.timeIsUp(),\n  isWin: false\n};\n\nexport const resultWin = {\n  name: label.GAME,\n  title: label.TITLE_WIN,\n  button: label.BUTTON_WIN,\n  isWin: true\n};\n\nexport const scoreBoard = [];\n\nexport const initialGame = {\n  level: -1,\n  remainingAttempts: MAX_ERRORS_COUNT,\n  time: TIME_FOR_GAME,\n  answers: []\n};\n\nexport const tick = (game) => {\n  game = Object.assign({}, game);\n  game.time--;\n  return game;\n};\n\nexport const getLevel = (index, allLevels = levels) => allLevels[index];\n\nexport const nextLevel = (state, allLevels = levels) => {\n  const index = state.level + 1;\n  if (!getLevel(index, allLevels)) {\n    throw new RangeError(`Can't find level ${index}`);\n  }\n  state.level = index;\n  return state;\n};\n\nexport const startGame = () => {\n  nextLevel();\n};\n\nexport const getAllLevelsTypes = (allLevels = levels) => {\n  return allLevels.map((level) => level.type);\n};\n\nexport const setLives = (game, lives) => {\n  if (lives < 0) {\n    throw new RangeError(`Can't set negative lives`);\n  }\n  game = Object.assign({}, game);\n  game.lives = lives;\n  return game;\n};\n\nexport const getScore = (answers) => {\n  let score = -1;\n\n  if (answers.length === LEVELS_COUNT) {\n    score = answers.reduce((acc, it) => {\n      let point = -2;\n      if (it.isCorrect) {\n        point = (it.timeSpent < FAST_ANSWER_PERIOD) ? 2 : 1;\n      }\n      return acc + point;\n    }, 0);\n  }\n  return score;\n};\n\nconst getTimeSpent = (answers) => {\n  let time = answers.reduce((acc, it) => {\n    return acc + it.timeSpent;\n  }, 0);\n  return time;\n};\n\nconst getPosition = (statistics, score) => {\n  // создаём из таблицы результатов, массив объектов: { position, score }\n  const statisticsIndexed = statistics\n      .map((scoreFromStaticstics, position) => ({\n        position,\n        score: scoreFromStaticstics\n      }));\n\n  // кладём в таблицу результат новой игры\n  statisticsIndexed.push({\n    position: null,\n    score\n  });\n\n  // получаем позицию новой игры в таблице результатов\n  const position = statisticsIndexed\n      .sort((a, b) => b.score - a.score)\n      .reduce((acc, it, index) => {\n        if (it.position === null) {\n          acc = index;\n        }\n        return acc;\n      }, -1);\n\n  if (position === -1) {\n    throw new Error(`Can't define position in Scoreboard`);\n  }\n  return position;\n};\n\nexport const printResult = (statistics, game) => {\n  let endGameMessage = ``;\n  const score = getScore(game.answers);\n  const time = getTimeSpent(game.answers);\n\n  if (game.remainingAttempts > 0 && time < TIME_FOR_GAME) {\n    // выйгрыш\n    const position = getPosition(statistics, score);\n    statistics.push(score);\n    statistics.sort((a, b) => b - a);\n\n    const stats = {\n      place: position + 1,\n      playersCount: statistics.length,\n      betterThan: Math.round((statistics.length - position - 1) * 100 / statistics.length)\n    };\n    endGameMessage = phrases.win(stats);\n\n  } else {\n    // проигрыш\n    endGameMessage = (time > TIME_FOR_GAME) ? phrases.timeIsUp() : phrases.noMoreAttempts();\n  }\n\n  return endGameMessage;\n};\n\nexport class Timer {\n  constructor(time) {\n    this.time = time;\n  }\n\n  get isFinished() {\n    return this.time < 1;\n  }\n\n  get time() {\n    return this._time;\n  }\n\n  set time(value) {\n    this._time = value;\n  }\n\n  tick() {\n    this.time--;\n  }\n}\n","import {\n  getLevel,\n  nextLevel,\n  printResult,\n  getScore,\n  getAllLevelsTypes,\n  scoreBoard,\n  tick,\n  levels as levelsData,\n  resultWin as resultWinData,\n  resultTry as resultTryData,\n  MAX_ERRORS_COUNT,\n  LEVELS_COUNT\n} from '../data/game.data';\n\nexport default class GameModel {\n  constructor(data = levelsData) {\n    this.data = data;\n  }\n\n  update(newState) {\n    this.state = Object.assign({}, this.state, newState);\n    return this.state;\n  }\n\n  resetAnswers(state) {\n    state.answers = [];\n  }\n\n  getCurrentLevel() {\n    return getLevel(this.state.level, this.data);\n  }\n\n  nextLevel() {\n    this.update(nextLevel(this.state, this.data));\n  }\n\n  tick() {\n    this.update(tick(this.state));\n  }\n\n  getMistakes() {\n    return MAX_ERRORS_COUNT - this.state.remainingAttempts;\n  }\n\n  getLevelType() {\n    return this.getCurrentLevel().type;\n  }\n\n  getAllLevelsTypes() {\n    return getAllLevelsTypes();\n  }\n\n  isLastLevel() {\n    return this.state.level === LEVELS_COUNT - 1;\n  }\n\n  win() {\n    resultWinData.content = printResult(scoreBoard, this.state);\n    resultWinData.score = getScore(this.state.answers);\n    resultWinData.errors = this.getMistakes();\n  }\n  failOnMistakes() {\n    resultTryData.content = printResult(scoreBoard, this.state);\n  }\n}\n"],"names":["levelsData","resultWinData","resultTryData"],"mappings":"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"}