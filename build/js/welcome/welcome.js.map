{"version":3,"file":"welcome.js","sources":["js/util.js","js/view.js","js/welcome/welcome-view.js","js/data/game.data.js","js/welcome/welcome.js"],"sourcesContent":["// create an element\nexport const createElement = template => {\n  const outer = document.createElement(`div`)\n  outer.innerHTML = template\n  return outer.firstElementChild\n}\n\n// select an element\nexport const $$ = (selector, scope = window.document) => {\n  return scope.querySelector(selector)\n}\n\n// get root element\nconst appElement = $$(`.app`)\n\n// replace screen\nexport const changeView = view => {\n  appElement.replaceChild(view.element, $$(`section.main`))\n}\n\n// add event listener on some event\nexport const $on = (eventName, callback, el = appElement) => {\n  el.addEventListener(eventName, evt => {\n    callback(evt)\n  })\n}\n// create a custom event to be triggered on\nexport const $trigger = (eventName, data = null) => {\n  let customEvent = new CustomEvent(eventName, { detail: data })\n  appElement.dispatchEvent(customEvent)\n}\n","import { createElement } from \"./util\";\n\n// base class\nexport default class AbstractView {\n  get template() {\n    throw new Error(`Provide template for view`);\n  }\n\n  render() {\n    return createElement(this.template.trim());\n  }\n  bind() {} // notifies\n  get element() {\n    if (!this._element) {\n      this._element = this.render();\n      this.bind(); //bind to this\n    }\n    return this._element;\n  }\n}\n","import AbstractView from \"../view\"\nimport { $$, $on, $trigger } from \"../util\"\n\nexport default class WelcomeView extends AbstractView {\n  constructor(data) {\n    super()\n    this.data = data\n  }\n\n  get template() {\n    const { name, button, title, rules } = this.data\n    return `\n<section class=\"main main--welcome\">\n  <section class=\"logo\" title=\"${name}\"><h1>${name}</h1></section>\n  <button class=\"main-play\">${button}</button>\n  <h2 class=\"title main-title\">${title}</h2>\n  <p class=\"text main-text\">${rules.reduce((str, it, index, arr) => {\n    const linebreak = index < arr.length - 1 ? `<br>` : ``\n    it = it + linebreak\n    return str + it\n  }, ``)}</p>\n</section>`.trim()\n  }\n\n  // on button click, start game\n  bind() {\n    $on(`click`, () => $trigger(`start`), $$(`.main-play`, this.element))\n  }\n\n  onStart() {}\n}\n","// todo: customize later\nconst samples = [\n  {\n    artist: `Kevin MacLeod`,\n    name: `Long Stroll`,\n    image: `https://yt3.ggpht.com/-fkDeGauT7Co/AAAAAAAAAAI/AAAAAAAAAAA/dkF5ZKkrxRo/s900-c-k-no-mo-rj-c0xffffff/photo.jpg`,\n    src: `https://www.youtube.com/audiolibrary_download?vid=91624fdc22fc54ed`,\n    genre: `Jazz`\n  },\n  {\n    artist: `Jingle Punks`,\n    name: `In the Land of Rhinoplasty`,\n    image: `https://i.vimeocdn.com/portrait/992615_300x300`,\n    src: `https://www.youtube.com/audiolibrary_download?vid=dc3b4dc549becd6b`,\n    genre: `Rock`\n  },\n  {\n    artist: `Audionautix`,\n    name: `Travel Light`,\n    image: `http://4.bp.blogspot.com/-kft9qu5ET6U/VPFUBi9W-MI/AAAAAAAACYM/UxXilXKYwOc/s1600/audionautix%2BHalf%2BSize.jpg`,\n    src: `https://www.youtube.com/audiolibrary_download?vid=a127d9b7de8a17cf`,\n    genre: `Country`\n  },\n  {\n    artist: `Riot`,\n    name: `\tLevel Plane`,\n    image: `https://i.ytimg.com/vi/jzgM3m8Vp1k/maxresdefault.jpg`,\n    src: `https://www.youtube.com/audiolibrary_download?vid=dfb828f40096184c`,\n    genre: `R&B`\n  },\n  {\n    artist: `Jingle Punks`,\n    name: `Lucky Day`,\n    image: `https://i.vimeocdn.com/portrait/992615_300x300`,\n    src: `https://www.youtube.com/audiolibrary_download?vid=bcbe5be936a32fb1`,\n    genre: `Pop`\n  },\n  {\n    artist: `Gunnar Olsen`,\n    name: `Home Stretch`,\n    image: `https://f4.bcbits.com/img/0004181452_10.jpg`,\n    src: `https://www.youtube.com/audiolibrary_download?vid=bcbe5be936a32fb1`,\n    genre: `Electronic`\n  }\n]\n\nexport const levels = [\n  {\n    type: `Genre`,\n    title: `Choose Jazz tracks`,\n    questions: [samples[0], samples[1], samples[2], samples[3]],\n    answer: `1000`\n  },\n  {\n    type: `Genre`,\n    title: `Choose Rock tracks`,\n    questions: [samples[0], samples[1], samples[2], samples[3]],\n    answer: `0110`\n  },\n  {\n    type: `Genre`,\n    title: `Choose Country tracks`,\n    questions: [samples[0], samples[1], samples[2], samples[3]],\n    answer: `0010`\n  },\n  {\n    type: `Genre`,\n    title: `Choose R&B tracks`,\n    questions: [samples[0], samples[1], samples[2], samples[3]],\n    answer: `0001`\n  },\n  {\n    type: `Genre`,\n    title: `Choose Pop tracks`,\n    questions: [samples[4], samples[1], samples[2], samples[3]],\n    answer: `1000`\n  },\n  {\n    type: `Genre`,\n    title: `Choose Electronic tracks`,\n    questions: [samples[0], samples[5], samples[2], samples[3]],\n    answer: `0100`\n  },\n  {\n    type: `Artist`,\n    title: `Who performs this song?`,\n    questions: [samples[0], samples[1], samples[2]],\n    src: samples[0].src,\n    answer: 0\n  },\n  {\n    type: `Artist`,\n    title: `Who performs this song?`,\n    questions: [samples[1], samples[2], samples[3]],\n    src: samples[2].src,\n    answer: 1\n  },\n  {\n    type: `Artist`,\n    title: `Who performs this song?`,\n    questions: [samples[3], samples[2], samples[1]],\n    src: samples[1].src,\n    answer: 2\n  },\n  {\n    type: `Artist`,\n    title: `Who performs this song?`,\n    questions: [samples[0], samples[1], samples[2]],\n    src: samples[1].src,\n    answer: 1\n  }\n]\n\nexport const LEVELS_COUNT = 10\nexport const FAST_ANSWER_PERIOD = 30\nexport const MAX_ERRORS_COUNT = 4\nexport const TIME_FOR_GAME = 60 * 5 + 1\n\nconst label = {\n  GAME: `Guess a melody`,\n\n  TITLE_WIN: `You're a true music fan!`,\n  TITLE_WELCOME: `Game rules`,\n  TITLE_FAIL_TIME: `Alas..`,\n  TITLE_FAIL_TRY: `Such a pity!`,\n\n  BUTTON_WELCOME: `Start game`,\n  BUTTON_WIN: `Play again`,\n  BUTTON_FAIL: `Try again`\n}\n\nconst phrases = {\n  timeIsUp: () => `Time is up!<br>You didn't make it on time.`,\n  noMoreAttempts: () =>\n    `You have run out of attempts.<br>Better luck next time!`,\n  win: ({ place, playersCount, betterThan }) =>\n    `You've taken ${place} place out of ${playersCount} players. It's&nbsp;better than &nbsp;${betterThan}%&nbsp; other players' results`\n}\n\nexport const welcome = {\n  name: label.GAME,\n  title: label.TITLE_WELCOME,\n  rules: [\n    `Rules are simple&nbsp;â€” &nbsp;you have to answer all questions in 5 minites.`,\n    `You can make 3 mistakes.`,\n    `Good luck!`\n  ],\n  button: label.BUTTON_WELCOME\n}\n\nexport const resultTry = {\n  name: label.GAME,\n  title: label.TITLE_FAIL_TRY,\n  button: label.BUTTON_FAIL,\n  isWin: false\n}\n\nexport const resultTime = {\n  name: label.GAME,\n  title: label.TITLE_FAIL_TIME,\n  button: label.BUTTON_FAIL,\n  content: phrases.timeIsUp(),\n  isWin: false\n}\n\nexport const resultWin = {\n  name: label.GAME,\n  title: label.TITLE_WIN,\n  button: label.BUTTON_WIN,\n  isWin: true\n}\n\nexport const scoreBoard = []\n\nexport const initialGame = {\n  level: -1,\n  remainingAttempts: MAX_ERRORS_COUNT,\n  time: TIME_FOR_GAME,\n  answers: []\n}\n\n// copy game object and reassign it\nexport const tick = game => {\n  game = Object.assign({}, game)\n  game.time--\n  return game\n}\n\nexport const getLevel = (index, allLevels = levels) => allLevels[index]\n\nexport const nextLevel = (state, allLevels = levels) => {\n  const index = state.level + 1\n  if (!getLevel(index, allLevels)) {\n    throw new RangeError(`Can't find level ${index}`)\n  }\n  state.level = index\n  return state\n}\n\nexport const startGame = () => {\n  nextLevel()\n}\n\nexport const getAllLevelsTypes = (allLevels = levels) => {\n  return allLevels.map(level => level.type)\n}\n\n//copy game object and reassign it\nexport const setLives = (game, lives) => {\n  if (lives < 0) {\n    throw new RangeError(`Can't set negative lives`)\n  }\n  game = Object.assign({}, game)\n  game.lives = lives\n  return game\n}\n\nexport const getScore = answers => {\n  let score = -1\n  // if all questions were answered\n  if (answers.length === LEVELS_COUNT) {\n    score = answers.reduce((acc, it) => {\n      let point = -2\n      if (it.isCorrect) {\n        // if answer was fast\n        point = it.timeSpent < FAST_ANSWER_PERIOD ? 2 : 1\n      }\n      return acc + point\n    }, 0)\n  }\n  return score\n}\n\nconst getTimeSpent = answers => {\n  let time = answers.reduce((acc, it) => {\n    return acc + it.timeSpent\n  }, 0)\n  return time\n}\n\n// fetching scoreboard and creating array of objs from it, { position, score }\nconst getPosition = (statistics, score) => {\n  const statisticsIndexed = statistics.map(\n    (scoreFromStaticstics, position) => ({\n      position,\n      score: scoreFromStaticstics\n    })\n  )\n\n  // push a new obj\n  statisticsIndexed.push({\n    position: null,\n    score\n  })\n\n  // get new obj's position\n  const position = statisticsIndexed\n    .sort((a, b) => b.score - a.score)\n    .reduce((acc, it, index) => {\n      if (it.position === null) {\n        acc = index\n      }\n      return acc\n    }, -1)\n\n  if (position === -1) {\n    throw new Error(`Can't define position in Scoreboard`)\n  }\n  return position\n}\n\nexport const printResult = (statistics, game) => {\n  let endGameMessage = ``\n  const score = getScore(game.answers)\n  const time = getTimeSpent(game.answers)\n\n  //if time's not up && there's lives\n  if (game.remainingAttempts > 0 && time < TIME_FOR_GAME) {\n    const position = getPosition(statistics, score)\n    statistics.push(score)\n    statistics.sort((a, b) => b - a)\n\n    const stats = {\n      place: position + 1,\n      playersCount: statistics.length,\n      betterThan: Math.round(\n        ((statistics.length - position - 1) * 100) / statistics.length\n      )\n    }\n    endGameMessage = phrases.win(stats)\n  } else {\n    endGameMessage =\n      time > TIME_FOR_GAME ? phrases.timeIsUp() : phrases.noMoreAttempts()\n  }\n\n  return endGameMessage\n}\n\nexport class Timer {\n  constructor(time) {\n    this.time = time\n  }\n\n  get isFinished() {\n    return this.time < 1\n  }\n\n  get time() {\n    return this._time\n  }\n\n  set time(value) {\n    this._time = value\n  }\n\n  tick() {\n    this.time--\n  }\n}\n","import { changeView } from \"../util\"\nimport WelcomeView from \"./welcome-view\"\nimport { welcome as data } from \"../data/game.data\"\n\nclass WelcomeScreen {\n  constructor() {\n    this.view = new WelcomeView(data)\n  }\n\n  init() {\n    changeView(this.view)\n  }\n}\n\nexport default new WelcomeScreen()\n"],"names":["welcome","data"],"mappings":"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"}